{"version":3,"sources":["APIKey.js","component/Spinner.gif","component/NavBar.js","component/Footerbar.js","actions/searchAction.js","actions/action.js","component/home/searchForm.js","component/Spinner.js","component/home/MovieCard.js","component/home/MoviesContainer.js","component/home/landing.js","reducers/searchReducer.js","reducers/index.js","store.js","component/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","NavBar","className","to","id","Footerbar","href","target","rel","setLoading","type","searchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","this","placeholder","name","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","error","console","log","Spinner","src","spinner","style","width","margin","display","alt","MovieCard","movie","Poster","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","landing","loading","inistialState","combineReducers","action","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","App","exact","path","component","Landing","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"sFAAAA,EAAOC,QAAU,CACbC,OAAS,Y,mBCDbF,EAAOC,QAAU,IAA0B,qC,iMC2B5BE,MAxBf,WACI,OACI,6BACI,yBAAKC,UAAU,oCACf,yBAAKA,UAAU,aACf,yBAAKA,UAAU,iBACf,kBAAC,IAAD,CAAMA,UAAU,6CAA6CC,GAAG,KAAhE,oBAIA,wBAAID,UAAU,gDACd,wBAAIA,UAAU,iCACd,uBAAGA,UAAU,oBAAoBE,GAAG,eAEpC,wBAAIF,UAAU,gCACd,uBAAGA,UAAU,qBAAqBE,GAAG,qBCMlCC,MAtBf,WACI,OACI,6BACI,yBAAKH,UAAU,OACnB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iDAAf,gBAEA,0BAAMA,UAAU,mCAAhB,aAFA,WAKQ,uBAAGA,UAAU,iBALrB,iEAMC,uBAAGI,KAAK,0BAA0BC,OAAO,SAASC,IAAI,uBAAtD,a,sDCiBAC,EAAa,WACtB,MAAM,CACFC,KC7Be,YCAVC,EAAb,4MAEIC,SAAW,SAAAC,GACP,EAAKC,MAAMC,YAAYF,EAAEN,OAAOS,QAHxC,EAMIC,SAAW,SAAAJ,GACPA,EAAEK,iBACF,EAAKJ,MAAMK,YAAY,EAAKL,MAAMM,MAClC,EAAKN,MAAML,cATnB,uDAaQ,OACI,yBAAKP,UAAU,8CACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACV,uBAAGA,UAAU,iBADjB,oCAGA,0BAAME,GAAG,aAAaa,SAAUI,KAAKJ,UACjC,2BAAOP,KAAK,OAAOY,YAAY,kCAAkCpB,UAAU,eAAeqB,KAAK,aAAaX,SAAUS,KAAKT,WAC3H,4BAAQF,KAAK,SAASR,UAAU,+BAAhC,iBArBxB,GAAgCsB,aAkCjBC,eAJS,SAAAC,GAAK,MAAI,CAChCN,KAAMM,EAAMC,OAAOP,QAGoB,CAACL,YFjCd,SAAAK,GAAI,OAAI,SAAAQ,GAC/BA,EAAS,CACLlB,KCNqB,gBDOrBmB,QAAUT,ME8BoCD,YF1B3B,SAAAC,GAAI,OAAI,SAAAQ,GAC/BE,IAAMC,IAAN,yCAA4C/B,SAA5C,cAAwDoB,IACvDY,MAAK,SAAAC,GAAQ,OAAIL,EAAS,CACvBlB,KCbqB,gBDcrBmB,QAAUI,EAASC,UAGtBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QEmBmC3B,cAApDgB,CAAiEd,G,iBCzBjE4B,MARf,WACI,OACI,6BACI,yBAAKC,IAAKC,IAASC,MAAO,CAACC,MAAM,QAAUC,OAAO,OAAQC,QAAS,SAAUC,IAAI,iBCkB9EC,EAtBf,uKACc,IACCC,EAAU3B,KAAKP,MAAfkC,MACP,OACQ,yBAAK9C,UAAU,iBACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,aAAasC,IAAKQ,EAAMC,OAAQH,IAAI,gBACnD,wBAAI5C,UAAU,yBACT8C,EAAME,MADX,OACsBF,EAAMG,MAE5B,kBAAC,IAAD,CAAMjD,UAAU,kBAAkBC,GAAI,UAAY6C,EAAMI,QAAxD,gBAEI,uBAAGlD,UAAU,gCAZzC,GAA+BsB,aCElB6B,EAAb,uKACc,IAEFC,EADG3B,EAAUN,KAAKP,MAAfa,OAIP,OAFA2B,EAA6B,QAAnB3B,EAAO4B,SAAqB5B,EAAO6B,OAAOC,KAAI,SAACT,EAAOU,GAAR,OAAkB,kBAAC,EAAD,CAAWC,IAAKD,EAAOV,MAAOA,OAAa,KAGjH,yBAAK9C,UAAU,OACVoD,OARjB,GAAqC9B,aAiBtBC,eAHS,SAAAC,GAAK,MAAK,CAC9BC,OAASD,EAAMC,OAAOA,UAEXF,CAAyB4B,GCf3BO,EAAb,uKACc,IACCC,EAAWxC,KAAKP,MAAhB+C,QAEP,OACI,yBAAK3D,UAAU,aACX,kBAAC,EAAD,MACC2D,EAAU,kBAAC,EAAD,MAAa,kBAAC,EAAD,WAPxC,GAA6BrC,aAiBdC,eAJS,SAAAC,GAAK,MAAK,CAC9BmC,QAAUnC,EAAMC,OAAOkC,WAGZpC,CAAyBmC,G,gCCtBlCE,EAAgB,CAClB1C,KAAO,GACPO,OAAQ,GACRkC,SAAU,EACVb,MAAQ,ICHGe,4BACX,CACIpC,ODIO,WAAuC,IAA9BD,EAA6B,uDAAtBoC,EAAeE,EAAO,uCACjD,OAAOA,EAAOtD,MACV,INXqB,gBMWA,OAAO,2BACrBgB,GADc,IAEjBN,KAAM4C,EAAOnC,QACbgC,SAAU,IAEd,INfqB,gBMeA,OAAO,2BACrBnC,GADc,IAEjBC,OAAQqC,EAAOnC,QACfgC,SAAU,IAEd,INnBoB,eMmBA,OAAO,2BACpBnC,GADa,IAEhBsB,MAAOgB,EAAOnC,QACdgC,SAAU,IAEd,INvBe,UMuBA,OAAO,2BACfnC,GADQ,IAEXmC,SAAS,IAEb,QAAS,OAAOnC,MErBTuC,EAFDC,sBAAYC,EAFN,GAEgCC,8BAAoBC,0BAAgBC,OCDlFC,E,kLAGElD,KAAKP,MAAM0D,WAAWnD,KAAKP,MAAM2D,MAAMC,OAAOtE,IAC9CiB,KAAKP,MAAML,e,+BAEL,IAAD,EACoBY,KAAKP,MAAvB+C,EADF,EACEA,QAASb,EADX,EACWA,MAEZ2B,EAAa,yBAAKzE,UAAU,aAC5B,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,yBAAKsC,IAAKQ,EAAMC,OAAQ/C,UAAU,YAAY4C,IAAI,YAEtD,yBAAK5C,UAAU,YACX,wBAAIA,UAAU,QAAQ8C,EAAME,OAC5B,wBAAIhD,UAAU,cACV,wBAAIA,UAAU,mBACV,0CADJ,IAC6B8C,EAAM4B,OAEnC,wBAAI1E,UAAU,mBACV,6CADJ,IACgC8C,EAAM6B,UAEtC,wBAAI3E,UAAU,mBACV,0CADJ,IAC6B8C,EAAM8B,OAEnC,wBAAI5E,UAAU,mBACV,gDADJ,IACmC8C,EAAM+B,YAEzC,wBAAI7E,UAAU,mBACV,6CADJ,IACgC8C,EAAMgC,UAEtC,wBAAI9E,UAAU,mBACV,2CADJ,IAC8B8C,EAAMiC,QAEpC,wBAAI/E,UAAU,mBACV,2CADJ,IAC8B8C,EAAMkC,WAK5C,yBAAKhF,UAAU,OACf,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,aACX,qCACC8C,EAAMmC,KACP,6BACA,uBAAG7E,KAAM,8BAAgC0C,EAAMI,OAAQ7C,OAAO,SAASC,IAAI,sBAAsBN,UAAU,mBAA3G,gBACA,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,8BAAvB,yBAORoD,EAAUO,EAAS,kBAAC,EAAD,MAAac,EACxC,OACI,6BACKrB,O,GA1DG9B,aAqELC,eALS,SAAAC,GAAK,MAAI,CAC7BmC,QAAUnC,EAAMC,OAAOkC,QACvBb,MAAOtB,EAAMC,OAAOqB,SAGgB,CAACwB,WVtDf,SAAApE,GAAE,OAAI,SAAAwB,GAC5BE,IAAMC,IAAN,yCAA4C/B,SAA5C,cAAwDI,IACvD4B,MAAK,SAAAC,GAAQ,OAAIL,EAAS,CACvBlB,KCtBoB,eDuBpBmB,QAAUI,EAASC,UAEtBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QUgDqB3B,cAAtCgB,CAAmD8C,GChDnDa,MAjBf,WACE,OAEI,kBAAC,IAAD,CAAUnB,MAAOA,GACjB,kBAAC,IAAD,KACE,6BACF,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAaC,UAAWhB,IAC1C,kBAAC,EAAD,UCPckB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2DCZNoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpE,MAAK,SAAAqE,GACJA,EAAaC,gBAEdnE,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMmE,c","file":"static/js/main.88eca4ef.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey : 'c951ff1'\r\n}","module.exports = __webpack_public_path__ + \"static/media/Spinner.0efe7276.gif\";","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction NavBar() {\r\n    return (\r\n        <div>\r\n            <nav className='navbar navbar-light bg-dark mb-5'>\r\n            <div className='container'>\r\n            <div className='navbar-header'>\r\n            <Link className='navbar-brand text-white text-lg brand-text' to=\"/\">\r\n            MovieSeriesInfo\r\n            </Link>\r\n            </div>\r\n            <ul className='navbar-nav ml-auto text-light d-inline-block'>\r\n            <li className='nav-item  d-inline-block mr-4'>\r\n            <i className='fab fa-imdb fa-5x' id='imdb-logo'></i>\r\n            </li>\r\n            <li className='nav-item d-inline-block mr-4'>\r\n            <i className='fab fa-react fa-5x' id='react-logo'></i>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\n\r\nfunction Footerbar() {\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n        <div className='col-md-12'>\r\n            <div className='footer p3 mt-4 text-center bg-dark text-light'>\r\n            Developed By:\r\n            <span className='text-warning Font-weight-normal'>\r\n                YogeshWer\r\n            </span>\r\n            , Using <i className='fab fa-react'/> React JS &amp; Redux JS intergrated with external movies data API \r\n             <a href='http://www.omdbapi.com/' target='_blank' rel=\"noopener noreferrer\">\r\n                OMDB\r\n            </a>\r\n            </div>\r\n\r\n        </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footerbar\r\n","import {SEARCH_MOVIES, FEATCH_MOVIES, FEATCH_MOVIE, LOADING} from './action'\r\nimport axios from 'axios'\r\nimport {APIKey} from '../APIKey'\r\n\r\nexport const searchMovie = text => dispatch=>{\r\n    dispatch({\r\n        type: SEARCH_MOVIES,\r\n        payload : text\r\n    })\r\n}\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response => dispatch({\r\n        type : FEATCH_MOVIES,\r\n        payload : response.data\r\n        // payload : response.data.Search\r\n    }))\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport const fetchMovie = id => dispatch =>{\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response => dispatch({\r\n        type : FEATCH_MOVIE,\r\n        payload : response.data\r\n    }))\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport const setLoading = () =>{\r\n    return{\r\n        type : LOADING\r\n    }\r\n}","export const SEARCH_MOVIES = 'SEARCH_MOVIES'\r\nexport const FEATCH_MOVIES = 'FEATCH_MOVIES'\r\nexport const FEATCH_MOVIE = 'FEATCH_MOVIE'\r\nexport const LOADING = 'LOADING'","import React, { Component } from 'react'\r\nimport {searchMovie, fetchMovies, setLoading} from '../../actions/searchAction'\r\nimport {connect} from 'react-redux'\r\nexport class searchForm extends Component {\r\n\r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value)\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault()\r\n        this.props.fetchMovies(this.props.text)\r\n        this.props.setLoading();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='jumbotron jumbotron-fluid mt-5 text-center'>\r\n                <div className='container'>\r\n                    <h2 className='display-4 mb-3'>\r\n                        <i className='fa fa-search'/> search for Movie, TV serials ..\r\n                    </h2>\r\n                    <form id='searchForm' onSubmit={this.onSubmit}>\r\n                        <input type='text' placeholder='search for Movie, TV serials ..' className='form-control' name='searchText' onChange={this.onChange}/>\r\n                        <button type='submit' className='btn btn-primary btn-bg mt-3'>Search</button>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n text: state.movies.text\r\n})\r\n\r\nexport default connect(mapStateToProps, {searchMovie, fetchMovies, setLoading})(searchForm)\r\n","import React from 'react'\r\nimport spinner from './Spinner.gif'\r\n\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div>\r\n            <img src={spinner} style={{width:'200px' , margin:'auto', display: 'block'}} alt='lodding...' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport class MovieCard extends Component {\r\n    render() {\r\n        const {movie} =  this.props\r\n        return (\r\n                <div className='col-md-3 mb-5'>\r\n                    <div className='card card-body bg-dark text-center h-100'>\r\n                        <img className='w-100 mb-2' src={movie.Poster} alt='movie-cover'/>\r\n                        <h5 className='text-light card-title'>\r\n                            {movie.Title} -  {movie.Year}\r\n                        </h5>\r\n                        <Link className='btn btn-primary' to={'/movie/' + movie.imdbID}>\r\n                            Movie Details\r\n                            <i className='fas fa-chevron-right'/>\r\n                        </Link>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport MovieCard from './MovieCard'\r\n\r\nexport class MoviesContainer extends Component {\r\n    render() {\r\n        const {movies} = this.props\r\n        let content = ''\r\n        content = movies.Response == \"True\" ? movies.Search.map((movie, index) => <MovieCard key={index} movie={movie} />) : null\r\n        // content = movies.length > 0 ? movies.map((movie, index) => <MovieCard key={index} movie={movie} />) : null\r\n        return (\r\n            <div className='row'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies : state.movies.movies\r\n})\r\nexport default connect(mapStateToProps)(MoviesContainer)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SearchForm from './searchForm'\r\nimport Spinner from '../Spinner'\r\nimport MoviesContainer from './MoviesContainer'\r\n\r\n\r\nexport class landing extends Component {\r\n    render() {\r\n        const {loading} = this.props \r\n\r\n        return (\r\n            <div className='container'>\r\n                <SearchForm/>       \r\n                {loading ? <Spinner/> : <MoviesContainer/>}         \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading : state.movies.loading\r\n})\r\n\r\nexport default connect(mapStateToProps)(landing)\r\n","import {SEARCH_MOVIES, FEATCH_MOVIES, FEATCH_MOVIE, LOADING} from '../actions/action'\r\n\r\nconst inistialState = {\r\n    text : '',\r\n    movies: [],\r\n    loading : false,\r\n    movie : []\r\n}\r\n\r\nexport default function(state =inistialState, action){\r\n    switch(action.type){\r\n        case SEARCH_MOVIES : return {\r\n            ...state,\r\n            text: action.payload,\r\n            loading : false\r\n        }\r\n        case FEATCH_MOVIES : return {\r\n            ...state,\r\n            movies: action.payload,\r\n            loading : false\r\n        }\r\n        case FEATCH_MOVIE : return {\r\n            ...state,\r\n            movie: action.payload,\r\n            loading : false\r\n        } \r\n        case LOADING : return {\r\n            ...state,\r\n            loading: true   \r\n        }\r\n        default :return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport searchReducer  from './searchReducer'\r\n\r\nexport default combineReducers(\r\n    {\r\n        movies : searchReducer\r\n    }\r\n)","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState ={}\r\n\r\nconst store = createStore(rootReducer,initialState, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchMovie, setLoading} from '../../actions/searchAction'\r\nimport Spinner from '../Spinner'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Movie extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchMovie(this.props.match.params.id)\r\n        this.props.setLoading()\r\n    }\r\n    render() {\r\n        const {loading, movie} = this.props\r\n\r\n        let movieInfo = (<div className=\"container\">\r\n            <div className='row'>\r\n                <div className=\"col-md-4 card card-body\">\r\n                    <img src={movie.Poster} className=\"thumbnail\" alt='Poster'/>\r\n                </div>\r\n                <div className='col-md-8'>\r\n                    <h2 className='mb-4'>{movie.Title}</h2>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Genre:</strong> {movie.Genre}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Released:</strong> {movie.Released}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Rated:</strong> {movie.Rated}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Director:</strong> {movie.Director}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Writer:</strong> {movie.Writer}\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <strong>Actors:</strong> {movie.Actors}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </div>\r\n                <div className='row'>\r\n                <div className=\"card card-body bg-dark my-5 text-light\">\r\n                    <div className=\"col-md-12\">\r\n                        <h3>About</h3>\r\n                        {movie.Plot}\r\n                        <hr/>\r\n                        <a href={\"https://www.imdb.com/title/\" + movie.imdbID} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary\">View on IMDB</a>\r\n                        <Link to=\"/\" className=\"btn btn-default text-light\">Go Back To Search</Link>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>)\r\n\r\n            let content = loading? <Spinner/> : movieInfo\r\n        return (\r\n            <div>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    loading : state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchMovie, setLoading})(Movie)\r\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport NavBar from './component/NavBar';\nimport Footerbar from './component/Footerbar';\nimport Landing from './component/home/landing';\nimport store from './store'\nimport Movie from './component/home/Movie';\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n      <Provider store={store}>\n      <Router>\n        <div>\n      <NavBar/>\n      <Route exact path=\"/\" component={Landing}/>\n      <Route exact path=\"/movie/:id\" component={Movie}/>\n      <Footerbar/>\n      </div>\n      </Router>\n      </Provider>\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}